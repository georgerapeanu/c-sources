#include <cstdio>
#include <cassert>
#include <deque>
#include <vector>
 
using namespace std;
 
FILE *f = fopen("craciun.in","r");
FILE *g = fopen("craciun.out","w");
 
const int NMAX = 1e5;
const double EPS = 1e-5;
 
template <typename T>
class NiciNuStiuBoss{
private:
	int sz;
	vector<T> value;
public:
	NiciNuStiuBoss(){
		sz = 0;
		value = vector<T>();
	}
	
	NiciNuStiuBoss(T sz){
		this->sz = 0;
		value = vector<T>();
	}
	
	
	void swap_with(NiciNuStiuBoss &other){
		swap(sz,other.sz);
		value.swap(other.value);
	}
	
	void merge_with(const NiciNuStiuBoss &other){
		assert(sz >= other.sz());
		for(int i = 0;i < other.sz;i++){
			value[i] += other.value[i];
		}
	}
}
 
int n;
int clopotei[NMAX + 5];
NiciNuStiuBoss<long long> a[NMAX + 5];
NiciNuStiuBoss

void dfs(int nod){
	for(auto it:graph[nnod];
}
 
int main(){
 
    fscanf(f,"%d",&n);
 
    for(int i = 1; i <= n; i++){
        fscanf(f,"%d",&clopotei[i]);
    }
 
    for(int i = 2;i <= n;i++){
        int tata;
        fscanf(f,"%d",&tata);
        graph[tata].push_back(i);
    }
	
	dfs(1);
 
    return 0;
}