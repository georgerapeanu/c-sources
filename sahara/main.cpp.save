#include <cstdio>
#include <queue>
using namespace std;
FILE *f=fopen("sahara.in","r"),*g=fopen("sahara.out","w");
long long m[1100][1100];
int N,M,Q,T,i,x1,x2,y1,y2,val,nr,rez,j;
queue <int> Qx,Qy;
const int dirx[]={-1,0,1,0},diry[]={0,1,0,-1};
int Fill(int x,int y)
{
    Qx.push(x);
    Qy.push(y);
    int nr=0;
    while(!Qx.empty())
    {
        x=Qx.front();
        y=Qy.front();
        Qx.pop();
        Qy.pop();
        nr++;
        for(int i=0;i<4;i++)
        {
            int xx,yy;
            xx=x+dirx[i];
            yy=y+diry[i];
            if(m[xx][yy]>=Q)
            {
                m[xx][yy]=0;
                Qx.push(xx);
                Qy.push(yy);
            }
        }
    }
    return nr;
}
int main()
{
    fscanf(f,"%d %d %d",&N,&M,&Q);
    fscanf(f,"%d",&T);
    for(i=1;i<=T;i++)
    {
        fscanf(f,"%d %d %d %d %d",&x1,&y1,&x2,&y2,&val);
        m[x1][y1]+=val;
        m[x2+1][y2+1]+=val;
        m[x2+1][y1]-=val;
        m[x1][y2+1]-=val;
    }
        for(i=1;i<=N;i++)
        {
            for(j=1;j<=M;j++)
            {
                m[i][j]=m[i-1][j]+m[i][j-1]-m[i-1][j-1]+m[i][j];
            }
        }
    for(i=1;i<=N;i++)
    {
        for(j=1;j<=M;j++)
        {
            if(m[i][j]>=Q)
            {
                m[i][]
                nr=Fill(i,j);
                if(nr>rez)
                rez=nr;
            }
        }
    }
    fprintf(g,"%d",rez);
    fclose(f);
    fclose(g);
    return 0;
}
